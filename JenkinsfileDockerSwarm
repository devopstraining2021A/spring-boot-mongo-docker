node{
     def mavenHome = tool name: "maven3.6.3"
     def buildNumber = BUILD_NUMBER
   stage("checkout code"){
    git credentialsId: 'd56d514e-4f27-4a59-8a7c-9386d53cd062', url: 'https://github.com/devopstraining2021A/spring-boot-mongo-docker.git'
   }
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    stage ("Build Docker Image"){
       sh "docker build -t gsreddydocker4546/spring-boot-mongonew ."
    }
   stage("dockerlogin and push the image"){
    withCredentials([string(credentialsId: 'Docker_Hub_Credentials', variable: 'Docker_Hub_Credentials')]) {
    sh "docker login -u gsreddydocker4546 -p ${Docker_Hub_Credentials}" 
    }
    sh "docker push gsreddydocker4546/spring-boot-mongonew"
    }
    stage("remove local images"){
      sh "docker rmi -f gsreddydocker4546/spring-boot-mongonew"
    }
    stage("deploy to docker stack in docker swarm cluster"){
     sshagent(['Docker_cluster_master']) {
      sh "scp -o StrictHostKeyChecking=no  docker-compose.yml ubuntu@172.31.4.24:"
      sh "ssh -o StrictHostKeyChecking=no ubuntu@172.31.4.24 docker stack deploy --prune  --compose-file docker-compose.yml springstack"
    }
   }
  }
